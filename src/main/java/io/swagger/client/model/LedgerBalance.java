/*
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * LedgerBalance
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-02-06T13:17:26.027+01:00")
public class LedgerBalance {
  @SerializedName("loyaltyProgramId")
  private Integer loyaltyProgramId = null;

  @SerializedName("balance")
  private Integer balance = null;

  @SerializedName("tierName")
  private String tierName = null;

  public LedgerBalance loyaltyProgramId(Integer loyaltyProgramId) {
    this.loyaltyProgramId = loyaltyProgramId;
    return this;
  }

   /**
   * ID of the ledger
   * @return loyaltyProgramId
  **/
  @ApiModelProperty(required = true, value = "ID of the ledger")
  public Integer getLoyaltyProgramId() {
    return loyaltyProgramId;
  }

  public void setLoyaltyProgramId(Integer loyaltyProgramId) {
    this.loyaltyProgramId = loyaltyProgramId;
  }

  public LedgerBalance balance(Integer balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Amount of points
   * @return balance
  **/
  @ApiModelProperty(required = true, value = "Amount of points")
  public Integer getBalance() {
    return balance;
  }

  public void setBalance(Integer balance) {
    this.balance = balance;
  }

  public LedgerBalance tierName(String tierName) {
    this.tierName = tierName;
    return this;
  }

   /**
   * Name of tier corresponding to the current balance
   * @return tierName
  **/
  @ApiModelProperty(required = true, value = "Name of tier corresponding to the current balance")
  public String getTierName() {
    return tierName;
  }

  public void setTierName(String tierName) {
    this.tierName = tierName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LedgerBalance ledgerBalance = (LedgerBalance) o;
    return Objects.equals(this.loyaltyProgramId, ledgerBalance.loyaltyProgramId) &&
        Objects.equals(this.balance, ledgerBalance.balance) &&
        Objects.equals(this.tierName, ledgerBalance.tierName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loyaltyProgramId, balance, tierName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LedgerBalance {\n");
    
    sb.append("    loyaltyProgramId: ").append(toIndentedString(loyaltyProgramId)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    tierName: ").append(toIndentedString(tierName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

