/*
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AccountEntity;
import io.swagger.client.model.Entity;
import io.swagger.client.model.LoyaltyProgramActivation;
import io.swagger.client.model.MutableEntity;
import io.swagger.client.model.NewLoyaltyProgram;
import io.swagger.client.model.Tiers;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * LoyaltyProgram
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-02-06T13:17:26.027+01:00")
public class LoyaltyProgram {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("modified")
  private OffsetDateTime modified = null;

  @SerializedName("accountId")
  private Integer accountId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("pointValidity")
  private Integer pointValidity = null;

  @SerializedName("spendingRate")
  private Integer spendingRate = null;

  @SerializedName("allowFallback")
  private Boolean allowFallback = null;

  @SerializedName("allowMixedPayment")
  private Boolean allowMixedPayment = null;

  @SerializedName("tiers")
  private Tiers tiers = null;

  @SerializedName("activeApplications")
  private List<LoyaltyProgramActivation> activeApplications = null;

  public LoyaltyProgram id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Unique ID for this entity.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Unique ID for this entity.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public LoyaltyProgram created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * The exact moment this entity was created.
   * @return created
  **/
  @ApiModelProperty(required = true, value = "The exact moment this entity was created.")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public LoyaltyProgram modified(OffsetDateTime modified) {
    this.modified = modified;
    return this;
  }

   /**
   * The exact moment this entity was last modified.
   * @return modified
  **/
  @ApiModelProperty(required = true, value = "The exact moment this entity was last modified.")
  public OffsetDateTime getModified() {
    return modified;
  }

  public void setModified(OffsetDateTime modified) {
    this.modified = modified;
  }

  public LoyaltyProgram accountId(Integer accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * The ID of the account that owns this entity.
   * @return accountId
  **/
  @ApiModelProperty(required = true, value = "The ID of the account that owns this entity.")
  public Integer getAccountId() {
    return accountId;
  }

  public void setAccountId(Integer accountId) {
    this.accountId = accountId;
  }

  public LoyaltyProgram name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of this loyalty program
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The name of this loyalty program")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public LoyaltyProgram description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A longer description of the loyalty program
   * @return description
  **/
  @ApiModelProperty(value = "A longer description of the loyalty program")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public LoyaltyProgram pointValidity(Integer pointValidity) {
    this.pointValidity = pointValidity;
    return this;
  }

   /**
   * Validity of newly added points in months
   * minimum: 1
   * @return pointValidity
  **/
  @ApiModelProperty(required = true, value = "Validity of newly added points in months")
  public Integer getPointValidity() {
    return pointValidity;
  }

  public void setPointValidity(Integer pointValidity) {
    this.pointValidity = pointValidity;
  }

  public LoyaltyProgram spendingRate(Integer spendingRate) {
    this.spendingRate = spendingRate;
    return this;
  }

   /**
   * Exchange rate between loyalty points and currency for spending points
   * @return spendingRate
  **/
  @ApiModelProperty(value = "Exchange rate between loyalty points and currency for spending points")
  public Integer getSpendingRate() {
    return spendingRate;
  }

  public void setSpendingRate(Integer spendingRate) {
    this.spendingRate = spendingRate;
  }

  public LoyaltyProgram allowFallback(Boolean allowFallback) {
    this.allowFallback = allowFallback;
    return this;
  }

   /**
   * Allow/disallow use of currency conversion rate for spending points
   * @return allowFallback
  **/
  @ApiModelProperty(value = "Allow/disallow use of currency conversion rate for spending points")
  public Boolean isAllowFallback() {
    return allowFallback;
  }

  public void setAllowFallback(Boolean allowFallback) {
    this.allowFallback = allowFallback;
  }

  public LoyaltyProgram allowMixedPayment(Boolean allowMixedPayment) {
    this.allowMixedPayment = allowMixedPayment;
    return this;
  }

   /**
   * Allow/disallow partial payment in currency for products bought with loyalty points
   * @return allowMixedPayment
  **/
  @ApiModelProperty(value = "Allow/disallow partial payment in currency for products bought with loyalty points")
  public Boolean isAllowMixedPayment() {
    return allowMixedPayment;
  }

  public void setAllowMixedPayment(Boolean allowMixedPayment) {
    this.allowMixedPayment = allowMixedPayment;
  }

  public LoyaltyProgram tiers(Tiers tiers) {
    this.tiers = tiers;
    return this;
  }

   /**
   * Get tiers
   * @return tiers
  **/
  @ApiModelProperty(value = "")
  public Tiers getTiers() {
    return tiers;
  }

  public void setTiers(Tiers tiers) {
    this.tiers = tiers;
  }

  public LoyaltyProgram activeApplications(List<LoyaltyProgramActivation> activeApplications) {
    this.activeApplications = activeApplications;
    return this;
  }

  public LoyaltyProgram addActiveApplicationsItem(LoyaltyProgramActivation activeApplicationsItem) {
    if (this.activeApplications == null) {
      this.activeApplications = new ArrayList<LoyaltyProgramActivation>();
    }
    this.activeApplications.add(activeApplicationsItem);
    return this;
  }

   /**
   * A list of applications that have this loyalty program active
   * @return activeApplications
  **/
  @ApiModelProperty(value = "A list of applications that have this loyalty program active")
  public List<LoyaltyProgramActivation> getActiveApplications() {
    return activeApplications;
  }

  public void setActiveApplications(List<LoyaltyProgramActivation> activeApplications) {
    this.activeApplications = activeApplications;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltyProgram loyaltyProgram = (LoyaltyProgram) o;
    return Objects.equals(this.id, loyaltyProgram.id) &&
        Objects.equals(this.created, loyaltyProgram.created) &&
        Objects.equals(this.modified, loyaltyProgram.modified) &&
        Objects.equals(this.accountId, loyaltyProgram.accountId) &&
        Objects.equals(this.name, loyaltyProgram.name) &&
        Objects.equals(this.description, loyaltyProgram.description) &&
        Objects.equals(this.pointValidity, loyaltyProgram.pointValidity) &&
        Objects.equals(this.spendingRate, loyaltyProgram.spendingRate) &&
        Objects.equals(this.allowFallback, loyaltyProgram.allowFallback) &&
        Objects.equals(this.allowMixedPayment, loyaltyProgram.allowMixedPayment) &&
        Objects.equals(this.tiers, loyaltyProgram.tiers) &&
        Objects.equals(this.activeApplications, loyaltyProgram.activeApplications);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, created, modified, accountId, name, description, pointValidity, spendingRate, allowFallback, allowMixedPayment, tiers, activeApplications);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltyProgram {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    pointValidity: ").append(toIndentedString(pointValidity)).append("\n");
    sb.append("    spendingRate: ").append(toIndentedString(spendingRate)).append("\n");
    sb.append("    allowFallback: ").append(toIndentedString(allowFallback)).append("\n");
    sb.append("    allowMixedPayment: ").append(toIndentedString(allowMixedPayment)).append("\n");
    sb.append("    tiers: ").append(toIndentedString(tiers)).append("\n");
    sb.append("    activeApplications: ").append(toIndentedString(activeApplications)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

