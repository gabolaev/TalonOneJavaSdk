/*
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * LoyaltyProgramActivation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-02-06T13:17:26.027+01:00")
public class LoyaltyProgramActivation {
  @SerializedName("applicationId")
  private Integer applicationId = null;

  @SerializedName("collectStoreId")
  private Integer collectStoreId = null;

  @SerializedName("spendStoreId")
  private Integer spendStoreId = null;

  public LoyaltyProgramActivation applicationId(Integer applicationId) {
    this.applicationId = applicationId;
    return this;
  }

   /**
   * The ID of an application that has the loyalty program activated.
   * @return applicationId
  **/
  @ApiModelProperty(required = true, value = "The ID of an application that has the loyalty program activated.")
  public Integer getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(Integer applicationId) {
    this.applicationId = applicationId;
  }

  public LoyaltyProgramActivation collectStoreId(Integer collectStoreId) {
    this.collectStoreId = collectStoreId;
    return this;
  }

   /**
   * The ID of the application storage for collection points for the loyalty program of an activated application.
   * @return collectStoreId
  **/
  @ApiModelProperty(required = true, value = "The ID of the application storage for collection points for the loyalty program of an activated application.")
  public Integer getCollectStoreId() {
    return collectStoreId;
  }

  public void setCollectStoreId(Integer collectStoreId) {
    this.collectStoreId = collectStoreId;
  }

  public LoyaltyProgramActivation spendStoreId(Integer spendStoreId) {
    this.spendStoreId = spendStoreId;
    return this;
  }

   /**
   * The ID of the application storage for spending points for the loyalty program of an activated application.
   * @return spendStoreId
  **/
  @ApiModelProperty(required = true, value = "The ID of the application storage for spending points for the loyalty program of an activated application.")
  public Integer getSpendStoreId() {
    return spendStoreId;
  }

  public void setSpendStoreId(Integer spendStoreId) {
    this.spendStoreId = spendStoreId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltyProgramActivation loyaltyProgramActivation = (LoyaltyProgramActivation) o;
    return Objects.equals(this.applicationId, loyaltyProgramActivation.applicationId) &&
        Objects.equals(this.collectStoreId, loyaltyProgramActivation.collectStoreId) &&
        Objects.equals(this.spendStoreId, loyaltyProgramActivation.spendStoreId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationId, collectStoreId, spendStoreId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltyProgramActivation {\n");
    
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    collectStoreId: ").append(toIndentedString(collectStoreId)).append("\n");
    sb.append("    spendStoreId: ").append(toIndentedString(spendStoreId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

