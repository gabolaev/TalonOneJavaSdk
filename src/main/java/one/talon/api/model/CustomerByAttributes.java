/*
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package one.talon.api.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Body16
 */

public class CustomerByAttributes {
    @SerializedName("attributes")
    private Object attributes = null;

    @SerializedName("integrationIDs")
    private List<String> integrationIDs = null;

    @SerializedName("profileIDs")
    private List<Integer> profileIDs = null;

    public CustomerByAttributes attributes(Object attributes) {
        this.attributes = attributes;
        return this;
    }

    /**
     * Properties to match against a customer profile. All provided attributes will be exactly matched against profile attributes
     * @return attributes
     **/
    @ApiModelProperty(value = "Properties to match against a customer profile. All provided attributes will be exactly matched against profile attributes")
    public Object getAttributes() {
        return attributes;
    }

    public void setAttributes(Object attributes) {
        this.attributes = attributes;
    }

    public CustomerByAttributes integrationIDs(List<String> integrationIDs) {
        this.integrationIDs = integrationIDs;
        return this;
    }

    public CustomerByAttributes addIntegrationIDsItem(String integrationIDsItem) {
        if (this.integrationIDs == null) {
            this.integrationIDs = new ArrayList<String>();
        }
        this.integrationIDs.add(integrationIDsItem);
        return this;
    }

    /**
     * Get integrationIDs
     * @return integrationIDs
     **/
    @ApiModelProperty(value = "")
    public List<String> getIntegrationIDs() {
        return integrationIDs;
    }

    public void setIntegrationIDs(List<String> integrationIDs) {
        this.integrationIDs = integrationIDs;
    }

    public CustomerByAttributes profileIDs(List<Integer> profileIDs) {
        this.profileIDs = profileIDs;
        return this;
    }

    public CustomerByAttributes addProfileIDsItem(Integer profileIDsItem) {
        if (this.profileIDs == null) {
            this.profileIDs = new ArrayList<Integer>();
        }
        this.profileIDs.add(profileIDsItem);
        return this;
    }

    /**
     * Get profileIDs
     * @return profileIDs
     **/
    @ApiModelProperty(value = "")
    public List<Integer> getProfileIDs() {
        return profileIDs;
    }

    public void setProfileIDs(List<Integer> profileIDs) {
        this.profileIDs = profileIDs;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CustomerByAttributes customerByAttributes = (CustomerByAttributes) o;
        return Objects.equals(this.attributes, customerByAttributes.attributes) &&
                Objects.equals(this.integrationIDs, customerByAttributes.integrationIDs) &&
                Objects.equals(this.profileIDs, customerByAttributes.profileIDs);
    }

    @Override
    public int hashCode() {
        return Objects.hash(attributes, integrationIDs, profileIDs);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CustomerByAttributes {\n");

        sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
        sb.append("    integrationIDs: ").append(toIndentedString(integrationIDs)).append("\n");
        sb.append("    profileIDs: ").append(toIndentedString(profileIDs)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

