/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package one.talon.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import one.talon.api.model.CartItem;
import org.threeten.bp.OffsetDateTime;

/**
 * 
 */
@ApiModel(description = "")

public class ApplicationSession {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("applicationId")
  private Integer applicationId = null;

  @SerializedName("profileId")
  private Integer profileId = null;

  @SerializedName("integrationId")
  private String integrationId = null;

  @SerializedName("coupon")
  private String coupon = null;

  @SerializedName("referral")
  private String referral = null;

  /**
   * Indicating if the customer session is in progress (\&quot;open\&quot;), \&quot;closed\&quot;, or \&quot;cancelled\&quot;.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    OPEN("open"),
    
    CLOSED("closed"),
    
    CANCELLED("cancelled");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("cartItems")
  private List<CartItem> cartItems = new ArrayList<CartItem>();

  @SerializedName("discounts")
  private Map<String, BigDecimal> discounts = new HashMap<String, BigDecimal>();

  @SerializedName("attributes")
  private Object attributes = null;

  public ApplicationSession id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Unique ID for this entity.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Unique ID for this entity.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public ApplicationSession created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * The exact moment this entity was created. The exact moment this entity was created.
   * @return created
  **/
  @ApiModelProperty(required = true, value = "The exact moment this entity was created. The exact moment this entity was created.")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public ApplicationSession applicationId(Integer applicationId) {
    this.applicationId = applicationId;
    return this;
  }

   /**
   * The ID of the application that owns this entity.
   * @return applicationId
  **/
  @ApiModelProperty(required = true, value = "The ID of the application that owns this entity.")
  public Integer getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(Integer applicationId) {
    this.applicationId = applicationId;
  }

  public ApplicationSession profileId(Integer profileId) {
    this.profileId = profileId;
    return this;
  }

   /**
   * The globally unique Talon.One ID of the customer that created this entity.
   * @return profileId
  **/
  @ApiModelProperty(value = "The globally unique Talon.One ID of the customer that created this entity.")
  public Integer getProfileId() {
    return profileId;
  }

  public void setProfileId(Integer profileId) {
    this.profileId = profileId;
  }

  public ApplicationSession integrationId(String integrationId) {
    this.integrationId = integrationId;
    return this;
  }

   /**
   * The ID used for this entity in the application system.
   * @return integrationId
  **/
  @ApiModelProperty(required = true, value = "The ID used for this entity in the application system.")
  public String getIntegrationId() {
    return integrationId;
  }

  public void setIntegrationId(String integrationId) {
    this.integrationId = integrationId;
  }

  public ApplicationSession coupon(String coupon) {
    this.coupon = coupon;
    return this;
  }

   /**
   * Any coupon code entered.
   * @return coupon
  **/
  @ApiModelProperty(required = true, value = "Any coupon code entered.")
  public String getCoupon() {
    return coupon;
  }

  public void setCoupon(String coupon) {
    this.coupon = coupon;
  }

  public ApplicationSession referral(String referral) {
    this.referral = referral;
    return this;
  }

   /**
   * Any referal code entered.
   * @return referral
  **/
  @ApiModelProperty(required = true, value = "Any referal code entered.")
  public String getReferral() {
    return referral;
  }

  public void setReferral(String referral) {
    this.referral = referral;
  }

  public ApplicationSession state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Indicating if the customer session is in progress (\&quot;open\&quot;), \&quot;closed\&quot;, or \&quot;cancelled\&quot;.
   * @return state
  **/
  @ApiModelProperty(required = true, value = "Indicating if the customer session is in progress (\"open\"), \"closed\", or \"cancelled\".")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public ApplicationSession cartItems(List<CartItem> cartItems) {
    this.cartItems = cartItems;
    return this;
  }

  public ApplicationSession addCartItemsItem(CartItem cartItemsItem) {
    this.cartItems.add(cartItemsItem);
    return this;
  }

   /**
   * Serialized JSON representation.
   * @return cartItems
  **/
  @ApiModelProperty(required = true, value = "Serialized JSON representation.")
  public List<CartItem> getCartItems() {
    return cartItems;
  }

  public void setCartItems(List<CartItem> cartItems) {
    this.cartItems = cartItems;
  }

  public ApplicationSession discounts(Map<String, BigDecimal> discounts) {
    this.discounts = discounts;
    return this;
  }

  public ApplicationSession putDiscountsItem(String key, BigDecimal discountsItem) {
    this.discounts.put(key, discountsItem);
    return this;
  }

   /**
   * A map of labelled discount values, in the same currency as the session.
   * @return discounts
  **/
  @ApiModelProperty(required = true, value = "A map of labelled discount values, in the same currency as the session.")
  public Map<String, BigDecimal> getDiscounts() {
    return discounts;
  }

  public void setDiscounts(Map<String, BigDecimal> discounts) {
    this.discounts = discounts;
  }

  public ApplicationSession attributes(Object attributes) {
    this.attributes = attributes;
    return this;
  }

   /**
   * Arbitrary properties associated with this item
   * @return attributes
  **/
  @ApiModelProperty(value = "Arbitrary properties associated with this item")
  public Object getAttributes() {
    return attributes;
  }

  public void setAttributes(Object attributes) {
    this.attributes = attributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationSession applicationSession = (ApplicationSession) o;
    return Objects.equals(this.id, applicationSession.id) &&
        Objects.equals(this.created, applicationSession.created) &&
        Objects.equals(this.applicationId, applicationSession.applicationId) &&
        Objects.equals(this.profileId, applicationSession.profileId) &&
        Objects.equals(this.integrationId, applicationSession.integrationId) &&
        Objects.equals(this.coupon, applicationSession.coupon) &&
        Objects.equals(this.referral, applicationSession.referral) &&
        Objects.equals(this.state, applicationSession.state) &&
        Objects.equals(this.cartItems, applicationSession.cartItems) &&
        Objects.equals(this.discounts, applicationSession.discounts) &&
        Objects.equals(this.attributes, applicationSession.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, created, applicationId, profileId, integrationId, coupon, referral, state, cartItems, discounts, attributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationSession {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    profileId: ").append(toIndentedString(profileId)).append("\n");
    sb.append("    integrationId: ").append(toIndentedString(integrationId)).append("\n");
    sb.append("    coupon: ").append(toIndentedString(coupon)).append("\n");
    sb.append("    referral: ").append(toIndentedString(referral)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    cartItems: ").append(toIndentedString(cartItems)).append("\n");
    sb.append("    discounts: ").append(toIndentedString(discounts)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

