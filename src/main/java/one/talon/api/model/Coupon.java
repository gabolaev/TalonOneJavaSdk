/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package one.talon.api.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * 
 */
@ApiModel(description = "")

public class Coupon {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("campaignId")
  private Integer campaignId = null;

  @SerializedName("value")
  private String value = null;

  @SerializedName("usageLimit")
  private Integer usageLimit = null;

  @SerializedName("startDate")
  private OffsetDateTime startDate = null;

  @SerializedName("expiryDate")
  private OffsetDateTime expiryDate = null;

  @SerializedName("usageCounter")
  private Integer usageCounter = null;

  @SerializedName("attributes")
  private Object attributes = null;

  @SerializedName("referralId")
  private Integer referralId = null;

  @SerializedName("recipientIntegrationId")
  private String recipientIntegrationId = null;

  public Coupon id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Unique ID for this entity.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Unique ID for this entity.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Coupon created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * The exact moment this entity was created.
   * @return created
  **/
  @ApiModelProperty(required = true, value = "The exact moment this entity was created.")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public Coupon campaignId(Integer campaignId) {
    this.campaignId = campaignId;
    return this;
  }

   /**
   * The ID of the campaign that owns this entity.
   * @return campaignId
  **/
  @ApiModelProperty(required = true, value = "The ID of the campaign that owns this entity.")
  public Integer getCampaignId() {
    return campaignId;
  }

  public void setCampaignId(Integer campaignId) {
    this.campaignId = campaignId;
  }

  public Coupon value(String value) {
    this.value = value;
    return this;
  }

   /**
   * The actual coupon code.
   * @return value
  **/
  @ApiModelProperty(required = true, value = "The actual coupon code.")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public Coupon usageLimit(Integer usageLimit) {
    this.usageLimit = usageLimit;
    return this;
  }

   /**
   * The number of times a coupon code can be redeemed. This can be set to 0 for no limit, but any campaign usage limits will still apply. 
   * minimum: 0
   * @return usageLimit
  **/
  @ApiModelProperty(required = true, value = "The number of times a coupon code can be redeemed. This can be set to 0 for no limit, but any campaign usage limits will still apply. ")
  public Integer getUsageLimit() {
    return usageLimit;
  }

  public void setUsageLimit(Integer usageLimit) {
    this.usageLimit = usageLimit;
  }

  public Coupon startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Timestamp at which point the coupon becomes valid.
   * @return startDate
  **/
  @ApiModelProperty(value = "Timestamp at which point the coupon becomes valid.")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public Coupon expiryDate(OffsetDateTime expiryDate) {
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * Expiry date of the coupon. Coupon never expires if this is omitted, zero, or negative.
   * @return expiryDate
  **/
  @ApiModelProperty(value = "Expiry date of the coupon. Coupon never expires if this is omitted, zero, or negative.")
  public OffsetDateTime getExpiryDate() {
    return expiryDate;
  }

  public void setExpiryDate(OffsetDateTime expiryDate) {
    this.expiryDate = expiryDate;
  }

  public Coupon usageCounter(Integer usageCounter) {
    this.usageCounter = usageCounter;
    return this;
  }

   /**
   * The number of times this coupon has been successfully used.
   * @return usageCounter
  **/
  @ApiModelProperty(required = true, value = "The number of times this coupon has been successfully used.")
  public Integer getUsageCounter() {
    return usageCounter;
  }

  public void setUsageCounter(Integer usageCounter) {
    this.usageCounter = usageCounter;
  }

  public Coupon attributes(Object attributes) {
    this.attributes = attributes;
    return this;
  }

   /**
   * Arbitrary properties associated with this item
   * @return attributes
  **/
  @ApiModelProperty(value = "Arbitrary properties associated with this item")
  public Object getAttributes() {
    return attributes;
  }

  public void setAttributes(Object attributes) {
    this.attributes = attributes;
  }

  public Coupon referralId(Integer referralId) {
    this.referralId = referralId;
    return this;
  }

   /**
   * The integration ID of the referring customer (if any) for whom this coupon was created as an effect.
   * @return referralId
  **/
  @ApiModelProperty(value = "The integration ID of the referring customer (if any) for whom this coupon was created as an effect.")
  public Integer getReferralId() {
    return referralId;
  }

  public void setReferralId(Integer referralId) {
    this.referralId = referralId;
  }

  public Coupon recipientIntegrationId(String recipientIntegrationId) {
    this.recipientIntegrationId = recipientIntegrationId;
    return this;
  }

   /**
   * The integration ID of a referred customer profile.
   * @return recipientIntegrationId
  **/
  @ApiModelProperty(value = "The integration ID of a referred customer profile.")
  public String getRecipientIntegrationId() {
    return recipientIntegrationId;
  }

  public void setRecipientIntegrationId(String recipientIntegrationId) {
    this.recipientIntegrationId = recipientIntegrationId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Coupon coupon = (Coupon) o;
    return Objects.equals(this.id, coupon.id) &&
        Objects.equals(this.created, coupon.created) &&
        Objects.equals(this.campaignId, coupon.campaignId) &&
        Objects.equals(this.value, coupon.value) &&
        Objects.equals(this.usageLimit, coupon.usageLimit) &&
        Objects.equals(this.startDate, coupon.startDate) &&
        Objects.equals(this.expiryDate, coupon.expiryDate) &&
        Objects.equals(this.usageCounter, coupon.usageCounter) &&
        Objects.equals(this.attributes, coupon.attributes) &&
        Objects.equals(this.referralId, coupon.referralId) &&
        Objects.equals(this.recipientIntegrationId, coupon.recipientIntegrationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, created, campaignId, value, usageLimit, startDate, expiryDate, usageCounter, attributes, referralId, recipientIntegrationId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Coupon {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    usageLimit: ").append(toIndentedString(usageLimit)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    usageCounter: ").append(toIndentedString(usageCounter)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    referralId: ").append(toIndentedString(referralId)).append("\n");
    sb.append("    recipientIntegrationId: ").append(toIndentedString(recipientIntegrationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

