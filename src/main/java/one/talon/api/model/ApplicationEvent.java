/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package one.talon.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * 
 */
@ApiModel(description = "")

public class ApplicationEvent {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("applicationId")
  private Integer applicationId = null;

  @SerializedName("profileId")
  private Integer profileId = null;

  @SerializedName("sessionId")
  private Integer sessionId = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("attributes")
  private Object attributes = null;

  @SerializedName("effects")
  private List<List<Object>> effects = new ArrayList<List<Object>>();

  public ApplicationEvent id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Unique ID for this entity.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Unique ID for this entity.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public ApplicationEvent created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * The exact moment this entity was created.
   * @return created
  **/
  @ApiModelProperty(required = true, value = "The exact moment this entity was created.")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public ApplicationEvent applicationId(Integer applicationId) {
    this.applicationId = applicationId;
    return this;
  }

   /**
   * The ID of the application that owns this entity.
   * @return applicationId
  **/
  @ApiModelProperty(required = true, value = "The ID of the application that owns this entity.")
  public Integer getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(Integer applicationId) {
    this.applicationId = applicationId;
  }

  public ApplicationEvent profileId(Integer profileId) {
    this.profileId = profileId;
    return this;
  }

   /**
   * The globally unique Talon.One ID of the customer that created this entity.
   * @return profileId
  **/
  @ApiModelProperty(value = "The globally unique Talon.One ID of the customer that created this entity.")
  public Integer getProfileId() {
    return profileId;
  }

  public void setProfileId(Integer profileId) {
    this.profileId = profileId;
  }

  public ApplicationEvent sessionId(Integer sessionId) {
    this.sessionId = sessionId;
    return this;
  }

   /**
   * The globally unique Talon.One ID of the session that contains this event.
   * @return sessionId
  **/
  @ApiModelProperty(value = "The globally unique Talon.One ID of the session that contains this event.")
  public Integer getSessionId() {
    return sessionId;
  }

  public void setSessionId(Integer sessionId) {
    this.sessionId = sessionId;
  }

  public ApplicationEvent type(String type) {
    this.type = type;
    return this;
  }

   /**
   * A string representing the event. Must not be a reserved event name.
   * @return type
  **/
  @ApiModelProperty(required = true, value = "A string representing the event. Must not be a reserved event name.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ApplicationEvent attributes(Object attributes) {
    this.attributes = attributes;
    return this;
  }

   /**
   * Additional JSON serialized data associated with the event.
   * @return attributes
  **/
  @ApiModelProperty(required = true, value = "Additional JSON serialized data associated with the event.")
  public Object getAttributes() {
    return attributes;
  }

  public void setAttributes(Object attributes) {
    this.attributes = attributes;
  }

  public ApplicationEvent effects(List<List<Object>> effects) {
    this.effects = effects;
    return this;
  }

  public ApplicationEvent addEffectsItem(List<Object> effectsItem) {
    this.effects.add(effectsItem);
    return this;
  }

   /**
   * An array containing the effects that were applied as a result of this event.
   * @return effects
  **/
  @ApiModelProperty(required = true, value = "An array containing the effects that were applied as a result of this event.")
  public List<List<Object>> getEffects() {
    for (int i = 0; i < effects.size(); i++) {
      Double campaignid = Double.parseDouble(effects.get(i).get(0).toString());
      Double rulesetid = Double.parseDouble(effects.get(i).get(1).toString());
      Double ruleindex = Double.parseDouble(effects.get(i).get(2).toString());

      effects.get(i).set(0, campaignid.intValue());
      effects.get(i).set(1, rulesetid.intValue());
      effects.get(i).set(2, ruleindex.intValue());
    }
    return effects;
  }

  public void setEffects(List<List<Object>> effects) {
    this.effects = effects;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationEvent applicationEvent = (ApplicationEvent) o;
    return Objects.equals(this.id, applicationEvent.id) &&
        Objects.equals(this.created, applicationEvent.created) &&
        Objects.equals(this.applicationId, applicationEvent.applicationId) &&
        Objects.equals(this.profileId, applicationEvent.profileId) &&
        Objects.equals(this.sessionId, applicationEvent.sessionId) &&
        Objects.equals(this.type, applicationEvent.type) &&
        Objects.equals(this.attributes, applicationEvent.attributes) &&
        Objects.equals(this.effects, applicationEvent.effects);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, created, applicationId, profileId, sessionId, type, attributes, effects);
  }


  @Override
  public String toString() {
    for (int i = 0; i < effects.size(); i++) {
      Double campaignid = Double.parseDouble(effects.get(i).get(0).toString());
      Double rulesetid = Double.parseDouble(effects.get(i).get(1).toString());
      Double ruleindex = Double.parseDouble(effects.get(i).get(2).toString());

      effects.get(i).set(0, campaignid.intValue());
      effects.get(i).set(1, rulesetid.intValue());
      effects.get(i).set(2, ruleindex.intValue());
    }

    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationEvent {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    profileId: ").append(toIndentedString(profileId)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    effects: ").append(toIndentedString(effects)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

