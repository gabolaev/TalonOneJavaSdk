/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package one.talon.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;

/**
 * 
 */
@ApiModel(description = "")

public class CampaignAnalytics {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("campaignId")
  private Integer campaignId = null;

  @SerializedName("couponRevenue")
  private BigDecimal couponRevenue = null;

  @SerializedName("couponDiscountCosts")
  private BigDecimal couponDiscountCosts = null;

  @SerializedName("couponsCount")
  private Integer couponsCount = null;

  @SerializedName("couponRedemptions")
  private Integer couponRedemptions = null;

  @SerializedName("campaignRedemptionLimit")
  private Integer campaignRedemptionLimit = null;

  @SerializedName("couponRedemptionLimit")
  private Integer couponRedemptionLimit = null;

  @SerializedName("couponRedemptionsRemaining")
  private Integer couponRedemptionsRemaining = null;

  @SerializedName("campaignRedemptionsRemaining")
  private Integer campaignRedemptionsRemaining = null;

  @SerializedName("revenuePerRedemption")
  private BigDecimal revenuePerRedemption = null;

  @SerializedName("unlimitedCoupons")
  private Integer unlimitedCoupons = null;

  public CampaignAnalytics id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Unique ID for this entity.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Unique ID for this entity.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public CampaignAnalytics created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * The exact moment this entity was created.
   * @return created
  **/
  @ApiModelProperty(required = true, value = "The exact moment this entity was created.")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public CampaignAnalytics campaignId(Integer campaignId) {
    this.campaignId = campaignId;
    return this;
  }

   /**
   * The ID of the campaign that owns this entity.
   * @return campaignId
  **/
  @ApiModelProperty(required = true, value = "The ID of the campaign that owns this entity.")
  public Integer getCampaignId() {
    return campaignId;
  }

  public void setCampaignId(Integer campaignId) {
    this.campaignId = campaignId;
  }

  public CampaignAnalytics couponRevenue(BigDecimal couponRevenue) {
    this.couponRevenue = couponRevenue;
    return this;
  }

   /**
   * Amount of revenue from campaign with coupons.
   * @return couponRevenue
  **/
  @ApiModelProperty(required = true, value = "Amount of revenue from campaign with coupons.")
  public BigDecimal getCouponRevenue() {
    return couponRevenue;
  }

  public void setCouponRevenue(BigDecimal couponRevenue) {
    this.couponRevenue = couponRevenue;
  }

  public CampaignAnalytics couponDiscountCosts(BigDecimal couponDiscountCosts) {
    this.couponDiscountCosts = couponDiscountCosts;
    return this;
  }

   /**
   * Amount of cost caused by discounts given in the campaign with sessions involving coupons.
   * @return couponDiscountCosts
  **/
  @ApiModelProperty(required = true, value = "Amount of cost caused by discounts given in the campaign with sessions involving coupons.")
  public BigDecimal getCouponDiscountCosts() {
    return couponDiscountCosts;
  }

  public void setCouponDiscountCosts(BigDecimal couponDiscountCosts) {
    this.couponDiscountCosts = couponDiscountCosts;
  }

  public CampaignAnalytics couponsCount(Integer couponsCount) {
    this.couponsCount = couponsCount;
    return this;
  }

   /**
   * Number of coupons in the campaign.
   * @return couponsCount
  **/
  @ApiModelProperty(required = true, value = "Number of coupons in the campaign.")
  public Integer getCouponsCount() {
    return couponsCount;
  }

  public void setCouponsCount(Integer couponsCount) {
    this.couponsCount = couponsCount;
  }

  public CampaignAnalytics couponRedemptions(Integer couponRedemptions) {
    this.couponRedemptions = couponRedemptions;
    return this;
  }

   /**
   * Number of redemptions in the campaign.
   * @return couponRedemptions
  **/
  @ApiModelProperty(required = true, value = "Number of redemptions in the campaign.")
  public Integer getCouponRedemptions() {
    return couponRedemptions;
  }

  public void setCouponRedemptions(Integer couponRedemptions) {
    this.couponRedemptions = couponRedemptions;
  }

  public CampaignAnalytics campaignRedemptionLimit(Integer campaignRedemptionLimit) {
    this.campaignRedemptionLimit = campaignRedemptionLimit;
    return this;
  }

   /**
   * Limit on overall redemptions in the campaign.
   * @return campaignRedemptionLimit
  **/
  @ApiModelProperty(required = true, value = "Limit on overall redemptions in the campaign.")
  public Integer getCampaignRedemptionLimit() {
    return campaignRedemptionLimit;
  }

  public void setCampaignRedemptionLimit(Integer campaignRedemptionLimit) {
    this.campaignRedemptionLimit = campaignRedemptionLimit;
  }

  public CampaignAnalytics couponRedemptionLimit(Integer couponRedemptionLimit) {
    this.couponRedemptionLimit = couponRedemptionLimit;
    return this;
  }

   /**
   * Possible redemptions calculated over all coupons.
   * @return couponRedemptionLimit
  **/
  @ApiModelProperty(required = true, value = "Possible redemptions calculated over all coupons.")
  public Integer getCouponRedemptionLimit() {
    return couponRedemptionLimit;
  }

  public void setCouponRedemptionLimit(Integer couponRedemptionLimit) {
    this.couponRedemptionLimit = couponRedemptionLimit;
  }

  public CampaignAnalytics couponRedemptionsRemaining(Integer couponRedemptionsRemaining) {
    this.couponRedemptionsRemaining = couponRedemptionsRemaining;
    return this;
  }

   /**
   * Number of redemptions remaining on the coupon level in the campaign.
   * @return couponRedemptionsRemaining
  **/
  @ApiModelProperty(required = true, value = "Number of redemptions remaining on the coupon level in the campaign.")
  public Integer getCouponRedemptionsRemaining() {
    return couponRedemptionsRemaining;
  }

  public void setCouponRedemptionsRemaining(Integer couponRedemptionsRemaining) {
    this.couponRedemptionsRemaining = couponRedemptionsRemaining;
  }

  public CampaignAnalytics campaignRedemptionsRemaining(Integer campaignRedemptionsRemaining) {
    this.campaignRedemptionsRemaining = campaignRedemptionsRemaining;
    return this;
  }

   /**
   * Hard limit of redemptions remaining on the campaign level.
   * @return campaignRedemptionsRemaining
  **/
  @ApiModelProperty(required = true, value = "Hard limit of redemptions remaining on the campaign level.")
  public Integer getCampaignRedemptionsRemaining() {
    return campaignRedemptionsRemaining;
  }

  public void setCampaignRedemptionsRemaining(Integer campaignRedemptionsRemaining) {
    this.campaignRedemptionsRemaining = campaignRedemptionsRemaining;
  }

  public CampaignAnalytics revenuePerRedemption(BigDecimal revenuePerRedemption) {
    this.revenuePerRedemption = revenuePerRedemption;
    return this;
  }

   /**
   * Composite to describe coupon performance.
   * @return revenuePerRedemption
  **/
  @ApiModelProperty(required = true, value = "Composite to describe coupon performance.")
  public BigDecimal getRevenuePerRedemption() {
    return revenuePerRedemption;
  }

  public void setRevenuePerRedemption(BigDecimal revenuePerRedemption) {
    this.revenuePerRedemption = revenuePerRedemption;
  }

  public CampaignAnalytics unlimitedCoupons(Integer unlimitedCoupons) {
    this.unlimitedCoupons = unlimitedCoupons;
    return this;
  }

   /**
   * Number of unlimited coupons in the campaign.
   * @return unlimitedCoupons
  **/
  @ApiModelProperty(required = true, value = "Number of unlimited coupons in the campaign.")
  public Integer getUnlimitedCoupons() {
    return unlimitedCoupons;
  }

  public void setUnlimitedCoupons(Integer unlimitedCoupons) {
    this.unlimitedCoupons = unlimitedCoupons;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignAnalytics campaignAnalytics = (CampaignAnalytics) o;
    return Objects.equals(this.id, campaignAnalytics.id) &&
        Objects.equals(this.created, campaignAnalytics.created) &&
        Objects.equals(this.campaignId, campaignAnalytics.campaignId) &&
        Objects.equals(this.couponRevenue, campaignAnalytics.couponRevenue) &&
        Objects.equals(this.couponDiscountCosts, campaignAnalytics.couponDiscountCosts) &&
        Objects.equals(this.couponsCount, campaignAnalytics.couponsCount) &&
        Objects.equals(this.couponRedemptions, campaignAnalytics.couponRedemptions) &&
        Objects.equals(this.campaignRedemptionLimit, campaignAnalytics.campaignRedemptionLimit) &&
        Objects.equals(this.couponRedemptionLimit, campaignAnalytics.couponRedemptionLimit) &&
        Objects.equals(this.couponRedemptionsRemaining, campaignAnalytics.couponRedemptionsRemaining) &&
        Objects.equals(this.campaignRedemptionsRemaining, campaignAnalytics.campaignRedemptionsRemaining) &&
        Objects.equals(this.revenuePerRedemption, campaignAnalytics.revenuePerRedemption) &&
        Objects.equals(this.unlimitedCoupons, campaignAnalytics.unlimitedCoupons);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, created, campaignId, couponRevenue, couponDiscountCosts, couponsCount, couponRedemptions, campaignRedemptionLimit, couponRedemptionLimit, couponRedemptionsRemaining, campaignRedemptionsRemaining, revenuePerRedemption, unlimitedCoupons);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignAnalytics {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    couponRevenue: ").append(toIndentedString(couponRevenue)).append("\n");
    sb.append("    couponDiscountCosts: ").append(toIndentedString(couponDiscountCosts)).append("\n");
    sb.append("    couponsCount: ").append(toIndentedString(couponsCount)).append("\n");
    sb.append("    couponRedemptions: ").append(toIndentedString(couponRedemptions)).append("\n");
    sb.append("    campaignRedemptionLimit: ").append(toIndentedString(campaignRedemptionLimit)).append("\n");
    sb.append("    couponRedemptionLimit: ").append(toIndentedString(couponRedemptionLimit)).append("\n");
    sb.append("    couponRedemptionsRemaining: ").append(toIndentedString(couponRedemptionsRemaining)).append("\n");
    sb.append("    campaignRedemptionsRemaining: ").append(toIndentedString(campaignRedemptionsRemaining)).append("\n");
    sb.append("    revenuePerRedemption: ").append(toIndentedString(revenuePerRedemption)).append("\n");
    sb.append("    unlimitedCoupons: ").append(toIndentedString(unlimitedCoupons)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

