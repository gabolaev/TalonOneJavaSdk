/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package one.talon.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * 
 */
@ApiModel(description = "")

public class NewExport {
  /**
   * The name of the entity type being exported.
   */
  @JsonAdapter(EntityEnum.Adapter.class)
  public enum EntityEnum {
    COUPON("Coupon");

    private String value;

    EntityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EntityEnum fromValue(String text) {
      for (EntityEnum b : EntityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<EntityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EntityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EntityEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return EntityEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("entity")
  private EntityEnum entity = null;

  @SerializedName("filter")
  private Object filter = null;

  public NewExport entity(EntityEnum entity) {
    this.entity = entity;
    return this;
  }

   /**
   * The name of the entity type being exported.
   * @return entity
  **/
  @ApiModelProperty(required = true, value = "The name of the entity type being exported.")
  public EntityEnum getEntity() {
    return entity;
  }

  public void setEntity(EntityEnum entity) {
    this.entity = entity;
  }

  public NewExport filter(Object filter) {
    this.filter = filter;
    return this;
  }

   /**
   * Map of keys and values that were used to filter the exported rows
   * @return filter
  **/
  @ApiModelProperty(required = true, value = "Map of keys and values that were used to filter the exported rows")
  public Object getFilter() {
    return filter;
  }

  public void setFilter(Object filter) {
    this.filter = filter;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewExport newExport = (NewExport) o;
    return Objects.equals(this.entity, newExport.entity) &&
        Objects.equals(this.filter, newExport.filter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entity, filter);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewExport {\n");
    
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

